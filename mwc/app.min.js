const materialsData={"Steel / MS":{density:7.85,color:"#71797E"},"Stainless Steel":{density:8,color:"#CFD4D9"},Aluminum:{density:2.7,color:"#D9DAD9"},"Aluminum 1100":{density:2.71,color:"#D9DAD9"},"Aluminum 2011":{density:2.83,color:"#D9DAD9"},"Aluminum 2014":{density:2.8,color:"#D9DAD9"},"Aluminum 2017":{density:2.8,color:"#D9DAD9"},"Aluminum 2024":{density:2.78,color:"#D9DAD9"},"Aluminum 3003":{density:2.73,color:"#D9DAD9"},"Aluminum 5005":{density:2.7,color:"#D9DAD9"},"Aluminum 5052":{density:2.68,color:"#D9DAD9"},"Aluminum 5056":{density:2.64,color:"#D9DAD9"},"Aluminum 5083":{density:2.66,color:"#D9DAD9"},"Aluminum 5086":{density:2.66,color:"#D9DAD9"},"Aluminum 6061":{density:2.7,color:"#D9DAD9"},"Aluminum 6063":{density:2.7,color:"#D9DAD9"},"Aluminum 7050":{density:2.83,color:"#D9DAD9"},"Aluminum 7075":{density:2.81,color:"#D9DAD9"},"Aluminum 7178":{density:2.83,color:"#D9DAD9"},Brass:{density:8.5,color:"#C49E5B"},Bronze:{density:8.78,color:"#CD7F32"},Copper:{density:8.96,color:"#B87333"},"Cast Iron":{density:7.2,color:"#61666A"},Nickel:{density:8.9,color:"#727472"},"Nickel 200":{density:8.9,color:"#727472"},"Nickel 400":{density:8.8,color:"#727472"},"Nickel R-405":{density:8.83,color:"#727472"},"Nickel K-500":{density:8.44,color:"#727472"},"Nickel 600":{density:8.47,color:"#727472"},"Nickel 625":{density:8.44,color:"#727472"},"Nickel 800H":{density:7.94,color:"#727472"},"Nickel 800AT":{density:7.94,color:"#727472"},"Nickel 825":{density:8.14,color:"#727472"},"Nickel 330":{density:7.94,color:"#727472"},"Nickel 20":{density:8.08,color:"#727472"},"Nickel C-276":{density:8.89,color:"#727472"},"Nickel 2545MD":{density:7.94,color:"#727472"},Magnesium:{density:1.74,color:"#c1c2c3"},Beryllium:{density:1.85,color:"#c0c0c0"},Titanium:{density:4.51,color:"#7A7772"},Zirconium:{density:6.52,color:"#EDF0F1"},Zinc:{density:7.14,color:"#BAC4C8"},Columbium:{density:8.57,color:"#727472"},Molybdenum:{density:10.22,color:"#96919c"},Silver:{density:10.49,color:"#C0C0C0"},Lead:{density:11.34,color:"#212121"},Tantalum:{density:16.69,color:"#A0A0AB"},Tungsten:{density:19.25,color:"#b5ac9f"},Gold:{density:19.32,color:"#FFD700"},Platinum:{density:21.45,color:"#E5E4E2"},Chrome:{density:7.19,color:"#C0C0C0"},Mercury:{density:13.53,color:"#C0C0C0"},Tin:{density:7.31,color:"#C0C0C0"},"PB/Gunmetal":{density:8.78,color:"#2C3539"},Potassium:{density:.86,color:"#E8E8E8"}},shapesData={Round:{params:["Diameter (D)","Length (L)"],formula:"π × (D/2)² × length × density",svgFile:"round.svg"},Square:{params:["Width (W)","Length (L)"],formula:"width² × length × density",svgFile:"square.svg"},"Rectangle/Plate/Sheet":{params:["Width (W)","Height (H)","Length (L)"],formula:"width × height × length × density",svgFile:"rectangle.svg"},Hexagonal:{params:["Diameter (D)","Length (L)"],formula:"(√3/2) × D² × length × density",svgFile:"hexagonal.svg"},Octagonal:{params:["Diameter (D)","Length (L)"],formula:"8 × tan(π/8) × (D/2)² × length × density",svgFile:"octagonal.svg"},Pipe:{params:["Outer Diameter (OD)","Inner Diameter (ID)","Length (L)"],formula:"π × ((OD/2)² - (ID/2)²) × length × density",svgFile:"pipe.svg"},"Hexagonal (Round)":{params:["Outer Diameter (OD)","Inner Diameter (ID)","Length (L)"],formula:"((√3/2) × OD² - π×(ID/2)²) × length × density",svgFile:"hexagonal-round.svg"},"Square (Round)":{params:["Width (W)","Inner Diameter (ID)","Length (L)"],formula:"(width² - π×(ID/2)²) × length × density",svgFile:"square-round.svg"},"Square Pipe":{params:["Width (W)","Wall Thickness (WT)","Length (L)"],formula:"(width² - (width-2×wall)²) × length × density",svgFile:"square-pipe.svg"},"Rectangle Pipe":{params:["Width (W)","Height (H)","Wall Thickness (WT)","Length (L)"],formula:"(width×height - (width-2×wall)×(height-2×wall)) × length × density",svgFile:"rectangle-pipe.svg"},Triangle:{params:["Width (W)","Height (H)","Length (L)"],formula:"0.5 × width × height × length × density",svgFile:"triangle.svg"},Sphere:{params:["Diameter (D)"],formula:"(4/3) × π × (D/2)³ × density",svgFile:"sphere.svg"},"Trapezoid/Trapezium":{params:["Width 1 (W1)","Width 2 (W2)","Height (H)","Length (L)"],formula:"0.5 × (W1 + W2) × height × length × density",svgFile:"trapezoid.svg"},Oval:{params:["Width (W)","Height (H)","Length (L)"],formula:"π × (width/2) × (height/2) × length × density",svgFile:"oval.svg"},"CR Square":{params:["Width (W)","Corner Radius (CR)","Length (L)"],formula:"(width² - 4×radius² + π×radius²) × length × density",svgFile:"cr-square.svg"},"CR Rectangle":{params:["Width (W)","Height (H)","Corner Radius (CR)","Length (L)"],formula:"(width×height - 4×radius² + π×radius²) × length × density",svgFile:"cr-rectangle.svg"},Angle:{params:["Width (W)","Height (H)","Thickness 1 (T1)","Thickness 2 (T2)","Length (L)"],formula:"(width×T1 + height×T2 - T1×T2) × length × density",svgFile:"angle.svg"},Channel:{params:["Width (W)","Height (H)","Thickness 1 (T1)","Thickness 2 (T2)","Length (L)"],formula:"(width×T1 + 2×height×T2 - 2×T1×T2) × length × density",svgFile:"channel.svg"},"T Bar":{params:["Width (W)","Height (H)","Thickness 1 (T1)","Thickness 2 (T2)","Length (L)"],formula:"(width×T1 + (height-T1)×T2) × length × density",svgFile:"t-bar.svg"},"I Beam":{params:["Width (W)","Height (H)","Flange Thickness (FT)","Web Thickness (WT)","Length (L)"],formula:"(2×width×flange_T + (height-2×flange_T)×web_T) × length × density",svgFile:"i-beam.svg"},"C Shape":{params:["Width (W)","Height (H)","Thickness (T)","Gap (G)","Length (L)"],formula:"width×T + 2×(height-gap)×T × length × density",svgFile:"c-shape.svg"},"E Shape":{params:["Width (W)","Height (H)","Thickness 1 (T1)","Thickness 2 (T2)","Length (L)"],formula:"(3×width×T1 + 2×(height-T1)×T2) × length × density",svgFile:"e-shape.svg"}};function init(){console.log("Initializing enhanced application..."),loadMaterials(),loadShapes();try{"undefined"!=typeof THREE?initThreeJS():console.warn("Three.js not loaded, continuing without 3D visualization")}catch(e){console.error("Error initializing Three.js:",e)}document.getElementById("shape").addEventListener("change",updateDimensions),document.getElementById("material").addEventListener("change",updateVisualization),document.getElementById("shape").addEventListener("change",updateVisualization),window.addEventListener("orientationchange",function(){setTimeout(function(){"function"==typeof onWindowResize&&onWindowResize()},100)}),window.addEventListener("resize",function(){"function"==typeof onWindowResize&&onWindowResize()})}function loadMaterials(){const e=document.getElementById("material");e&&Object.keys(materialsData).forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.appendChild(n)})}function loadShapes(){const e=document.getElementById("shape");e&&Object.keys(shapesData).forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.appendChild(n)})}async function loadShapeIcon(e){const t=document.getElementById("shapeIcon");if(e&&shapesData[e]&&shapesData[e].svgFile)try{const n=shapesData[e].svgFile,a=await fetch(`images/${n}`);if(!a.ok)throw new Error(`Failed to load SVG: ${a.status}`);const i=await a.text();t.innerHTML=i;const s=document.getElementById("material").value;s&&materialsData[s]&&updateSvgColor(materialsData[s].color)}catch(e){console.error("Error loading SVG:",e),t.innerHTML='\n      <svg width="200" height="115" viewBox="0 0 200 115" xmlns="http://www.w3.org/2000/svg">\n        <text x="100" y="57.5" text-anchor="middle" font-family="Arial" font-size="12" fill="#666">\n          Shape diagram unavailable\n        </text>\n      </svg>\n    '}else t.innerHTML='\n      <svg width="200" height="115" viewBox="0 0 200 115" xmlns="http://www.w3.org/2000/svg">\n        <text x="100" y="57.5" text-anchor="middle" font-family="Arial" font-size="14" fill="#666">\n          Select a shape to view\n        </text>\n      </svg>\n    '}function updateSvgColor(e){const t=document.getElementById("shapeIcon").querySelector("svg");if(!t)return;const n=t.querySelectorAll("path, circle, rect, polygon, ellipse, line, g"),a=["white","#ffffff","#FFFFFF","#D9D9D9","#d9d9d9","#F0F0F0","#f0f0f0"];n.forEach(t=>{const n=t.getAttribute("fill"),i=t.getAttribute("style"),s=t.getAttribute("fill-opacity"),o=a.includes(n)||s&&parseFloat(s)<1;if(n&&"none"!==n&&"transparent"!==n&&!o&&t.setAttribute("fill",e),s&&parseFloat(s)<1&&("white"===n||a.includes(n)?t.setAttribute("fill","white"):t.setAttribute("fill",e)),i){let n=i;const s=i.match(/fill:\s*([^;]+)/);if(s){const t=s[1].trim();a.includes(t)||(n=n.replace(/fill:\s*[^;]+/g,`fill:${e}`))}if(i.includes("stroke:")){const t=i.match(/stroke:\s*([^;]+)/);if(t){const i=t[1].trim();a.includes(i)||(n=n.replace(/stroke:\s*[^;]+/g,`stroke:${e}`))}}n!==i&&t.setAttribute("style",n)}const l=t.getAttribute("stroke");l&&"none"!==l&&"transparent"!==l&&!a.includes(l)&&t.setAttribute("stroke",e)})}function updateDimensions(){const e=document.getElementById("shape").value,t=document.getElementById("dimensions");if(document.getElementById("results").classList.add("hidden"),loadShapeIcon(e),!e)return void(t.innerHTML="");const n=shapesData[e].params;let a="";n.forEach((e,t)=>{a+=`\n            <div class="dimension-row">\n                <div class="dimension-input">\n                    <div class="form-group">\n                        <input type="number" id="param${t+1}" step="0.001" min="0.001" placeholder="Enter ${e.toLowerCase()}">\n                    </div>\n                    <div class="form-group">\n                        <select id="unit${t+1}">\n                            <option value="in">in</option>\n                            <option value="ft">ft</option>\n                            <option value="yd">yd</option>\n                            <option value="mm">mm</option>\n                            <option value="cm">cm</option>\n                            <option value="m">m</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        `}),t.innerHTML=a,n.forEach((e,t)=>{const n=document.getElementById(`param${t+1}`),a=document.getElementById(`unit${t+1}`);n&&n.addEventListener("input",updateVisualization),a&&a.addEventListener("change",updateVisualization)}),updateVisualization()}function updateVisualization(){const e=document.getElementById("material").value,t=document.getElementById("shape").value;if(!t)return;const n=e?materialsData[e].color:"#8C9196",a=document.getElementById("shapeInfo"),i=document.getElementById("materialInfo");if(e&&materialsData[e]&&updateSvgColor(materialsData[e].color),e){const t=materialsData[e];i.innerHTML=`\n            <strong>${e}</strong><br>\n            Density: ${t.density} g/cm³\n        `}else i.innerHTML="";const s={},o=shapesData[t];o&&o.params&&o.params.forEach((e,t)=>{const n=document.getElementById(`param${t+1}`),a=document.getElementById(`unit${t+1}`);if(n&&n.value&&a){const t=parseFloat(n.value),i=a.value;if(t>0){const n=convertToInches(t,i),a=e.toLowerCase();a.includes("diameter")?a.includes("outer")?s.outerDiameter=n:a.includes("inner")?s.innerDiameter=n:s.diameter=n:a.includes("width")?a.includes("1")?s.width1=n:a.includes("2")?s.width2=n:a.includes("inner")?s.innerWidth=n:s.width=n:a.includes("height")?a.includes("inner")?s.innerHeight=n:s.height=n:a.includes("length")?s.length=n:a.includes("thickness")?a.includes("1")?s.thickness1=n:a.includes("2")?s.thickness2=n:a.includes("wall")?s.wall=n:s.thickness=n:a.includes("wall")?s.wall=n:a.includes("radius")?s.radius=n:a.includes("gap")&&(s.gap=n)}}}),"function"==typeof create3DShape&&create3DShape(t,n,s),a.textContent=`${t} - ${shapesData[t].formula}`}function convertToCentimeters(e,t){switch(t){case"mm":return e/10;case"cm":default:return e;case"m":return 100*e;case"in":return 2.54*e;case"ft":return 30.48*e;case"yd":return 91.44*e}}function convertToInches(e,t){switch(t){case"cm":return e/2.54;case"m":return 100*e/2.54;case"mm":return e/10/2.54;case"ft":return 12*e;case"yd":return 36*e;default:return e}}function calculateWeight(){const e=document.getElementById("material").value,t=document.getElementById("shape").value,n=parseFloat(document.getElementById("quantity").value)||1;if(!e||!t)return void alert("Please select both material and shape");const a=shapesData[t],i=materialsData[e],s=[];for(let e=1;e<=a.params.length;e++){const t=parseFloat(document.getElementById(`param${e}`).value),n=document.getElementById(`unit${e}`).value;if(!t||t<=0)return void alert(`Please enter a valid value for ${a.params[e-1]}`);s.push(convertToCentimeters(t,n))}let o=0;try{switch(t){case"Round":const e=s[0]/2;o=Math.PI*e*e*s[1];break;case"Sphere":const t=s[0]/2;o=4/3*Math.PI*Math.pow(t,3);break;case"Square":o=s[0]*s[0]*s[1];break;case"Rectangle":case"Plate":case"Sheet":case"Rectangle/Plate":case"Rectangle/Plate/Sheet":o=s[0]*s[1]*s[2];break;case"Hexagonal":o=Math.sqrt(3)/2*s[0]*s[0]*s[1];break;case"Octagonal":const n=s[0]/2;o=8*Math.tan(Math.PI/8)*n*n*s[1];break;case"Pipe":const a=s[0]/2,i=s[1]/2;if(i>=a)return void alert("Inner diameter must be less than outer diameter!");o=Math.PI*(a*a-i*i)*s[2];break;case"Square Pipe":const l=s[0]*s[0],r=s[0]-2*s[1];if(r<=0)return void alert("Wall thickness too large for outer dimension!");o=(l-r*r)*s[2];break;case"Rectangle Pipe":const d=s[0]*s[1],c=s[0]-2*s[2],u=s[1]-2*s[2];if(c<=0||u<=0)return void alert("Wall thickness too large for outer dimensions!");o=(d-c*u)*s[3];break;case"Triangle":o=.5*s[0]*s[1]*s[2];break;case"Trapezoid":case"Trapezium":case"Trapezoid/Trapezium":o=.5*(s[0]+s[1])*s[2]*s[3];break;case"Oval":o=Math.PI*(s[0]/2)*(s[1]/2)*s[2];break;case"Hexagonal (Round)":const m=Math.sqrt(3)/2*s[0]*s[0],h=s[1]/2;if(s[1]>=s[0])return void alert("Inner diameter must be less than outer diameter!");o=(m-Math.PI*h*h)*s[2];break;case"Square (Round)":const g=s[0]*s[0],p=s[1]/2;o=(g-Math.PI*p*p)*s[2];break;case"CR Square":o=(s[0]*s[0]-4*s[1]*s[1]+Math.PI*s[1]*s[1])*s[2];break;case"CR Rectangle":o=(s[0]*s[1]-4*s[2]*s[2]+Math.PI*s[2]*s[2])*s[3];break;case"Angle":o=(s[0]*s[2]+s[1]*s[3]-s[2]*s[3])*s[4];break;case"Channel":o=(s[0]*s[2]+2*s[1]*s[3]-2*s[2]*s[3])*s[4];break;case"C Shape":o=(s[0]*s[2]+2*(s[1]-s[3])*s[2])*s[4];break;case"T Bar":o=(s[0]*s[2]+(s[1]-s[2])*s[3])*s[4];break;case"I Beam":const y=2*s[0]*s[2],v=(s[1]-2*s[2])*s[3];o=(y+v)*s[4];break;case"E Shape":o=(3*s[0]*s[2]+2*(s[1]-s[2])*s[3])*s[4];break;default:o=s[0]*s[1]*(s[2]||1)}const e=o*i.density*n,a=e/1e3,l=2.20462*a,r=16*l;document.getElementById("weightKgs").textContent=a.toFixed(3),document.getElementById("weightGrams").textContent=e.toFixed(2),document.getElementById("weightLbs").textContent=l.toFixed(3),document.getElementById("weightOunces").textContent=r.toFixed(2);const d=parseFloat(document.getElementById("rate").value),c=document.getElementById("rateUnit").value,u=document.getElementById("totalCost");if(d&&d>0){let t=0,n="";switch(c){case"per kg":t=d*a,n=d.toFixed(1)+"/kg";break;case"per lb":t=d*l,n=d.toFixed(1)+"/lb";break;case"per gram":t=d*e,n=d.toFixed(3)+"/g";break;case"per ounce":t=d*r,n=d.toFixed(3)+"/oz"}document.getElementById("costValue").textContent=`(${n}) : ${t.toFixed(2)}`,u.classList.remove("hidden")}else u.classList.add("hidden");document.getElementById("results").classList.remove("hidden")}catch(e){alert("Error in calculation: "+e.message)}}function clearForm(){document.getElementById("material").value="",document.getElementById("shape").value="",document.getElementById("quantity").value="1",document.getElementById("rate").value="",document.getElementById("rateUnit").value="per kg",document.getElementById("dimensions").innerHTML="",document.getElementById("results").classList.add("hidden"),loadShapeIcon(""),"function"==typeof clearThreeJSVisualization&&clearThreeJSVisualization(),document.getElementById("shapeInfo").textContent="Choose a material and shape to see the 3D visualization",document.getElementById("materialInfo").innerHTML=""}window.addEventListener("DOMContentLoaded",init);