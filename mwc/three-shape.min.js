let scene,camera,renderer,currentMesh;function initThreeJS(){const e=document.getElementById("threeCanvas"),t=e.parentElement;scene=new THREE.Scene,scene.background=new THREE.Color(15790320),camera=new THREE.PerspectiveCamera(75,t.clientWidth/t.clientHeight,.1,1e3),camera.position.set(5,5,5),renderer=new THREE.WebGLRenderer({canvas:e,antialias:!0}),renderer.setSize(t.clientWidth,t.clientHeight),renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap;const n=new THREE.AmbientLight(4210752,.6);scene.add(n);const a=new THREE.DirectionalLight(16777215,.8);a.position.set(10,10,5),a.castShadow=!0,a.shadow.mapSize.width=2048,a.shadow.mapSize.height=2048,scene.add(a),setupOrbitControls(),window.addEventListener("resize",onWindowResize),animate()}function setupOrbitControls(){let e=!1,t=0,n=0,a=0,r=0,i=0,o=0;const s=document.getElementById("threeCanvas");s.addEventListener("mousedown",a=>{e=!0,t=a.clientX,n=a.clientY}),s.addEventListener("mousemove",i=>{if(!e)return;const o=i.clientX-t,s=i.clientY-n;r+=.01*o,a+=.01*s,t=i.clientX,n=i.clientY}),s.addEventListener("mouseup",()=>{e=!1}),s.addEventListener("wheel",e=>{camera.position.multiplyScalar(e.deltaY>0?1.1:.9)}),function e(){if(i+=.1*(a-i),o+=.1*(r-o),currentMesh){const e=currentMesh.userData&&currentMesh.userData.initialXRotation?currentMesh.userData.initialXRotation:0,t=currentMesh.userData&&currentMesh.userData.initialYRotation?currentMesh.userData.initialYRotation:0,n=currentMesh.userData&&currentMesh.userData.initialZRotation?currentMesh.userData.initialZRotation:0;currentMesh.rotation.set(e,t,n),currentMesh.rotateX(i),currentMesh.rotateY(o),currentMesh.userData&&currentMesh.userData.needsInitialRotation&&currentMesh.rotateZ(Math.PI/2)}requestAnimationFrame(e)}()}function onWindowResize(){const e=document.querySelector(".shape-container");camera.aspect=e.clientWidth/e.clientHeight,camera.updateProjectionMatrix(),renderer.setSize(e.clientWidth,e.clientHeight)}function animate(){requestAnimationFrame(animate),renderer.render(scene,camera)}function create3DShape(e,t,n){if(!scene)return;currentMesh&&(scene.remove(currentMesh),currentMesh.geometry.dispose(),currentMesh.material.dispose());const a=new THREE.Color(t),r=new THREE.MeshPhongMaterial({color:a,shininess:100,specular:new THREE.Color(2236962)});let i;const o=1.5,s=10,c=.3;switch(e){case"Round":i=new THREE.CylinderGeometry(o,o,s,32),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Square":i=new THREE.BoxGeometry(3,3,s),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Rectangle":case"Rectangle/Plate":case"Rectangle/Plate/Sheet":i=new THREE.BoxGeometry(3.75,o,s),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Hexagonal":const e=o,t=s,n=new THREE.Shape;for(let t=0;t<6;t++){const a=t/6*Math.PI*2,r=(t+1)/6*Math.PI*2,i=Math.cos(a)*e,o=Math.sin(a)*e;Math.cos(r),Math.sin(r);0===t?n.moveTo(i,o):n.lineTo(i,o)}n.closePath();const a={depth:t,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(n,a),i.translate(0,0,-t/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Octagonal":const u=o,l=s,h=new THREE.Shape;for(let e=0;e<8;e++){const t=e/8*Math.PI*2,n=(e+1)/8*Math.PI*2,a=Math.cos(t)*u,r=Math.sin(t)*u;Math.cos(n),Math.sin(n);0===e?h.moveTo(a,r):h.lineTo(a,r)}h.closePath();const M={depth:l,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(h,M),i.translate(0,0,-l/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Plate":case"Sheet":i=new THREE.BoxGeometry(s,c,3.75),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Pipe":const E=o,R=.8999999999999999,T=s,d=new THREE.Shape;d.absarc(0,0,E,0,2*Math.PI,!1);const m=new THREE.Path;m.absarc(0,0,R,0,2*Math.PI,!0),d.holes.push(m);const D={depth:T,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(d,D),i.translate(0,0,-T/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Ring":const w=new THREE.Shape;w.absarc(0,0,o,0,2*Math.PI,!1);const H=new THREE.Path;H.absarc(0,0,.8999999999999999,0,2*Math.PI,!0),w.holes.push(H);const p={depth:.6,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(w,p),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=-Math.PI/2,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0,currentMesh.rotation.x=-Math.PI/2;break;case"Hexagonal (Round)":const v=o,b=.8999999999999999,S=s,P=new THREE.Shape;for(let e=0;e<6;e++){const t=e/6*Math.PI*2,n=Math.cos(t)*v,a=Math.sin(t)*v;0===e?P.moveTo(n,a):P.lineTo(n,a)}P.closePath();const I=new THREE.Path;I.absarc(0,0,b,0,2*Math.PI,!0),P.holes.push(I);const X={depth:S,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(P,X),i.translate(0,0,-S/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Sphere":const g=o;i=new THREE.SphereGeometry(g,32,16),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Square (Round)":const Y=3,y=.8999999999999999,Z=s,x=new THREE.Shape,k=Y/2;x.moveTo(-k,-k),x.lineTo(k,-k),x.lineTo(k,k),x.lineTo(-k,k),x.closePath();const G=new THREE.Path;G.absarc(0,0,y,0,2*Math.PI,!0),x.holes.push(G);const C={depth:Z,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(x,C),i.translate(0,0,-Z/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Square Pipe":const f=3,q=1.7999999999999998,z=s,L=new THREE.Shape,W=f/2,B=q/2;L.moveTo(-W,-W),L.lineTo(W,-W),L.lineTo(W,W),L.lineTo(-W,W),L.closePath();const A=new THREE.Path;A.moveTo(-B,-B),A.lineTo(B,-B),A.lineTo(B,B),A.lineTo(-B,B),A.closePath(),L.holes.push(A);const F={depth:z,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(L,F),i.translate(0,0,-z/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Rectangle Pipe":const O=3.75,j=o,J=s,V=O-2*c,K=j-2*c,N=new THREE.Shape,Q=O/2,U=j/2,$=V/2,_=K/2;N.moveTo(-Q,-U),N.lineTo(Q,-U),N.lineTo(Q,U),N.lineTo(-Q,U),N.closePath();const ee=new THREE.Path;ee.moveTo(-$,-_),ee.lineTo($,-_),ee.lineTo($,_),ee.lineTo(-$,_),ee.closePath(),N.holes.push(ee);const te={depth:J,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(N,te),i.translate(0,0,-J/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Triangle":const ne=3,ae=ne*(Math.sqrt(3)/2),re=s,ie=new THREE.Shape,oe=ne/2;ie.moveTo(-oe,0),ie.lineTo(oe,0),ie.lineTo(0,ae),ie.closePath();const se={depth:re,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(ie,se),i.translate(0,0,-re/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Trapezoid":case"Trapezium":case"Trapezoid/Trapezium":const ce=3.75,ue=o,le=o,he=s,Me=new THREE.Shape,Ee=ce/2,Re=ue/2;Me.moveTo(-Ee,0),Me.lineTo(Ee,0),Me.lineTo(Re,le),Me.lineTo(-Re,le),Me.closePath();const Te={depth:he,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Me,Te),i.translate(0,0,-he/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Oval":const de=3.75,me=o,De=s,we=new THREE.Shape,He=de/2,pe=me/2;we.ellipse(0,0,He,pe,0,2*Math.PI,!1,0);const ve={depth:De,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(we,ve),i.translate(0,0,-De/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"CR Square":const be=3,Se=.30000000000000004,Pe=s,Ie=new THREE.Shape,Xe=be/2,ge=Se;Ie.moveTo(-Xe+ge,-Xe),Ie.lineTo(Xe-ge,-Xe),Ie.quadraticCurveTo(Xe,-Xe,Xe,-Xe+ge),Ie.lineTo(Xe,Xe-ge),Ie.quadraticCurveTo(Xe,Xe,Xe-ge,Xe),Ie.lineTo(-Xe+ge,Xe),Ie.quadraticCurveTo(-Xe,Xe,-Xe,Xe-ge),Ie.lineTo(-Xe,-Xe+ge),Ie.quadraticCurveTo(-Xe,-Xe,-Xe+ge,-Xe);const Ye={depth:Pe,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Ie,Ye),i.translate(0,0,-Pe/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"CR Rectangle":const ye=3.75,Ze=o,xe=.30000000000000004,ke=s,Ge=new THREE.Shape,Ce=ye/2,fe=Ze/2,qe=xe;Ge.moveTo(-Ce+qe,-fe),Ge.lineTo(Ce-qe,-fe),Ge.quadraticCurveTo(Ce,-fe,Ce,-fe+qe),Ge.lineTo(Ce,fe-qe),Ge.quadraticCurveTo(Ce,fe,Ce-qe,fe),Ge.lineTo(-Ce+qe,fe),Ge.quadraticCurveTo(-Ce,fe,-Ce,fe-qe),Ge.lineTo(-Ce,-fe+qe),Ge.quadraticCurveTo(-Ce,-fe,-Ce+qe,-fe);const ze={depth:ke,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Ge,ze),i.translate(0,0,-ke/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Angle":const Le=3,We=2.505,Be=c,Ae=.24899999999999997,Fe=s,Oe=new THREE.Shape;Oe.moveTo(0,0),Oe.lineTo(Le,0),Oe.lineTo(Le,Be),Oe.lineTo(Ae,Be),Oe.lineTo(Ae,We),Oe.lineTo(0,We),Oe.lineTo(0,0);const je={depth:Fe,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Oe,je),i.translate(-Le/2,-We/2,-Fe/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Channel":const Je=3,Ve=4.005,Ke=c,Ne=.24899999999999997,Qe=s,Ue=new THREE.Shape;Ue.moveTo(0,0),Ue.lineTo(Je,0),Ue.lineTo(Je,Ke),Ue.lineTo(Ne,Ke),Ue.lineTo(Ne,Ve-Ke),Ue.lineTo(Je,Ve-Ke),Ue.lineTo(Je,Ve),Ue.lineTo(0,Ve),Ue.lineTo(0,0);const $e={depth:Qe,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Ue,$e),i.translate(-Je/2,-Ve/2,-Qe/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"T Bar":const _e=3.495,et=3,tt=c,nt=.24899999999999997,at=s,rt=new THREE.Shape,it=(_e-nt)/2;rt.moveTo(it,0),rt.lineTo(it+nt,0),rt.lineTo(it+nt,et-tt),rt.lineTo(_e,et-tt),rt.lineTo(_e,et),rt.lineTo(0,et),rt.lineTo(0,et-tt),rt.lineTo(it,et-tt),rt.lineTo(it,0);const ot={depth:at,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(rt,ot),i.translate(-_e/2,-et/2,-at/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"I Beam":const st=3,ct=4.005,ut=c,lt=.201,ht=s,Mt=new THREE.Shape;Mt.moveTo(0,0),Mt.lineTo(st,0),Mt.lineTo(st,ut);const Et=(st-lt)/2;Mt.lineTo(Et+lt,ut),Mt.lineTo(Et+lt,ct-ut),Mt.lineTo(st,ct-ut),Mt.lineTo(st,ct),Mt.lineTo(0,ct),Mt.lineTo(0,ct-ut),Mt.lineTo(Et,ct-ut),Mt.lineTo(Et,ut),Mt.lineTo(0,ut),Mt.lineTo(0,0);const Rt={depth:ht,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Mt,Rt),i.translate(-st/2,-ct/2,-ht/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"C Shape":const Tt=3,dt=1.995,mt=.201,Dt=.405,wt=s,Ht=new THREE.Shape;Ht.moveTo(0,0),Ht.lineTo(Tt,0),Ht.lineTo(Tt,dt),Ht.lineTo(Tt-Dt,dt),Ht.lineTo(Tt-Dt,dt-mt),Ht.lineTo(Tt-mt,dt-mt),Ht.lineTo(Tt-mt,mt),Ht.lineTo(mt,mt),Ht.lineTo(mt,dt-mt),Ht.lineTo(Dt,dt-mt),Ht.lineTo(Dt,dt),Ht.lineTo(0,dt),Ht.lineTo(0,0);const pt={depth:wt,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Ht,pt),i.translate(-Tt/2,-dt/2,-wt/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"E Shape":const vt=3,bt=4.005,St=c,Pt=.24899999999999997,It=s,Xt=new THREE.Shape;Xt.moveTo(0,0),Xt.lineTo(vt,0),Xt.lineTo(vt,St),Xt.lineTo(Pt,St);const gt=(bt-St)/2;Xt.lineTo(Pt,gt),Xt.lineTo(vt,gt),Xt.lineTo(vt,gt+St),Xt.lineTo(Pt,gt+St),Xt.lineTo(Pt,bt-St),Xt.lineTo(vt,bt-St),Xt.lineTo(vt,bt),Xt.lineTo(0,bt),Xt.lineTo(0,0);const Yt={depth:It,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Xt,Yt),i.translate(-vt/2,-bt/2,-It/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;default:i=new THREE.BoxGeometry(1,1,1),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0}currentMesh&&(currentMesh.castShadow=!0,currentMesh.receiveShadow=!0,scene.add(currentMesh),camera.position.set(5,5,5),camera.lookAt(0,0,0))}function setupOrbitControls(){let e=!1,t=0,n=0,a=0,r=0,i=0,o=0;const s=document.getElementById("threeCanvas");s.addEventListener("mousedown",a=>{e=!0,t=a.clientX,n=a.clientY}),s.addEventListener("mousemove",i=>{if(!e)return;const o=i.clientX-t,s=i.clientY-n;r+=.01*o,a+=.01*s,t=i.clientX,n=i.clientY}),s.addEventListener("mouseup",()=>{e=!1}),s.addEventListener("wheel",e=>{camera.position.multiplyScalar(e.deltaY>0?1.1:.9)}),function e(){if(i+=.1*(a-i),o+=.1*(r-o),currentMesh){const e=currentMesh.userData&&void 0!==currentMesh.userData.initialXRotation?currentMesh.userData.initialXRotation:0,t=currentMesh.userData&&void 0!==currentMesh.userData.initialYRotation?currentMesh.userData.initialYRotation:0,n=currentMesh.userData&&void 0!==currentMesh.userData.initialZRotation?currentMesh.userData.initialZRotation:0;currentMesh.rotation.set(e,t,n),currentMesh.rotateX(i),currentMesh.rotateY(o),currentMesh.userData&&currentMesh.userData.needsInitialRotation&&currentMesh.rotateZ(Math.PI/2)}requestAnimationFrame(e)}()}function onWindowResize(){const e=document.querySelector(".shape-container");camera.aspect=e.clientWidth/e.clientHeight,camera.updateProjectionMatrix(),renderer.setSize(e.clientWidth,e.clientHeight)}function animate(){requestAnimationFrame(animate),renderer.render(scene,camera)}function clearThreeJSVisualization(){currentMesh&&scene&&(scene.remove(currentMesh),currentMesh.geometry.dispose(),currentMesh.material.dispose(),currentMesh=null)}