let scene,camera,renderer,currentMesh,autoRotate=!1,autoRotateSpeed=.01,autoRotateX=0,autoRotateY=0,manuallyDisabled=!1;function initThreeJS(){const e=document.getElementById("threeCanvas"),t=e.parentElement;scene=new THREE.Scene,scene.background=new THREE.Color(15790320),camera=new THREE.PerspectiveCamera(75,t.clientWidth/t.clientHeight,.1,1e3),camera.position.set(5,5,5),renderer=new THREE.WebGLRenderer({canvas:e,antialias:!0,powerPreference:"default",precision:"mediump"}),renderer.setSize(t.clientWidth,t.clientHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap;const a=new THREE.AmbientLight(4210752,.6);scene.add(a);const n=new THREE.DirectionalLight(16777215,.8);n.position.set(10,10,5),n.castShadow=!0,n.shadow.mapSize.width=1024,n.shadow.mapSize.height=1024,scene.add(n),setupOrbitControls(),window.addEventListener("resize",onWindowResize),animate()}function updateSceneBackground(e){scene&&(scene.background=e?new THREE.Color(e):new THREE.Color(15790320))}function setupOrbitControls(){let e=!1,t=0,a=0,n=0,o=0,r=0,i=0;const s=document.getElementById("threeCanvas");s.addEventListener("mousedown",n=>{!autoRotate||manuallyDisabled?(e=!0,autoRotate=!1,t=n.clientX,a=n.clientY,n.preventDefault()):n.preventDefault()}),s.addEventListener("mousemove",r=>{if(autoRotate&&!manuallyDisabled)return void r.preventDefault();if(!e)return;const i=r.clientX-t,s=r.clientY-a;o+=.01*i,n+=.01*s,t=r.clientX,a=r.clientY,r.preventDefault()}),s.addEventListener("mouseup",t=>{!autoRotate||manuallyDisabled?(e=!1,t.preventDefault()):t.preventDefault()}),s.addEventListener("touchstart",n=>{!autoRotate||manuallyDisabled?(1===n.touches.length&&(e=!0,autoRotate=!1,t=n.touches[0].clientX,a=n.touches[0].clientY),n.preventDefault()):n.preventDefault()},{passive:!1}),s.addEventListener("touchmove",r=>{if(autoRotate&&!manuallyDisabled)return void r.preventDefault();if(!e||1!==r.touches.length)return;const i=r.touches[0].clientX-t,s=r.touches[0].clientY-a;o+=.01*i,n+=.01*s,t=r.touches[0].clientX,a=r.touches[0].clientY,r.preventDefault()},{passive:!1}),s.addEventListener("touchend",t=>{!autoRotate||manuallyDisabled?(e=!1,t.preventDefault()):t.preventDefault()},{passive:!1}),s.addEventListener("wheel",e=>{if(autoRotate&&!manuallyDisabled)return void e.preventDefault();autoRotate=!1;const t=e.deltaY>0?1.1:.9;camera.position.multiplyScalar(t);const a=camera.position.length();a<2&&camera.position.normalize().multiplyScalar(2),a>15&&camera.position.normalize().multiplyScalar(15),e.preventDefault()},{passive:!1});let u=0;s.addEventListener("touchstart",e=>{if(2===e.touches.length){const t=e.touches[0],a=e.touches[1];u=Math.sqrt(Math.pow(a.clientX-t.clientX,2)+Math.pow(a.clientY-t.clientY,2))}}),s.addEventListener("touchmove",e=>{if(2===e.touches.length){const t=e.touches[0],a=e.touches[1],n=Math.sqrt(Math.pow(a.clientX-t.clientX,2)+Math.pow(a.clientY-t.clientY,2));if(u>0){const e=u/n;camera.position.multiplyScalar(e);const t=camera.position.length();t<2&&camera.position.normalize().multiplyScalar(2),t>15&&camera.position.normalize().multiplyScalar(15)}u=n,e.preventDefault()}}),function e(){if(autoRotate&&currentMesh&&(autoRotateY+=autoRotateSpeed,autoRotateX+=.3*autoRotateSpeed),r+=.1*(n-r),i+=.1*(o-i),currentMesh){const e=currentMesh.userData&&currentMesh.userData.initialXRotation?currentMesh.userData.initialXRotation:0,t=currentMesh.userData&&currentMesh.userData.initialYRotation?currentMesh.userData.initialYRotation:0,a=currentMesh.userData&&currentMesh.userData.initialZRotation?currentMesh.userData.initialZRotation:0;currentMesh.rotation.set(e,t,a),autoRotate?(currentMesh.rotateX(r+autoRotateX),currentMesh.rotateY(i+autoRotateY)):(currentMesh.rotateX(r),currentMesh.rotateY(i)),currentMesh.userData&&currentMesh.userData.needsInitialRotation&&currentMesh.rotateZ(Math.PI/2)}requestAnimationFrame(e)}()}function onWindowResize(){const e=document.querySelector(".shape-container");e&&camera&&renderer&&(camera.aspect=e.clientWidth/e.clientHeight,camera.updateProjectionMatrix(),renderer.setSize(e.clientWidth,e.clientHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)))}function animate(){requestAnimationFrame(animate),renderer.render(scene,camera)}function create3DShape(e,t,a,n=null){if(!scene)return;n&&updateSceneBackground(n),currentMesh&&(scene.remove(currentMesh),currentMesh.geometry.dispose(),currentMesh.material.dispose());const o=new THREE.Color(t),r=new THREE.MeshPhongMaterial({color:o,shininess:100,specular:new THREE.Color(2236962)});let i;const s=1.5,u=10,c=.3;switch(e){case"Round":i=new THREE.CylinderGeometry(s,s,u,32),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Square":i=new THREE.BoxGeometry(3,3,u),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Rectangle":case"Rectangle / Plate":case"Rectangle / Plate / Sheet":i=new THREE.BoxGeometry(3.75,s,u),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Hexagonal":const e=s,t=u,a=new THREE.Shape;for(let t=0;t<6;t++){const n=t/6*Math.PI*2,o=(t+1)/6*Math.PI*2,r=Math.cos(n)*e,i=Math.sin(n)*e;Math.cos(o),Math.sin(o);0===t?a.moveTo(r,i):a.lineTo(r,i)}a.closePath();const n={depth:t,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(a,n),i.translate(0,0,-t/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Octagonal":const o=s,l=u,h=new THREE.Shape;for(let e=0;e<8;e++){const t=e/8*Math.PI*2,a=(e+1)/8*Math.PI*2,n=Math.cos(t)*o,r=Math.sin(t)*o;Math.cos(a),Math.sin(a);0===e?h.moveTo(n,r):h.lineTo(n,r)}h.closePath();const R={depth:l,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(h,R),i.translate(0,0,-l/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Plate":case"Sheet":i=new THREE.BoxGeometry(u,c,3.75),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Pipe":const M=s,E=.8999999999999999,T=u,d=new THREE.Shape;d.absarc(0,0,M,0,2*Math.PI,!1);const m=new THREE.Path;m.absarc(0,0,E,0,2*Math.PI,!0),d.holes.push(m);const D={depth:T,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(d,D),i.translate(0,0,-T/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Hexagonal (Round)":const p=s,w=.8999999999999999,v=u,H=new THREE.Shape;for(let e=0;e<6;e++){const t=e/6*Math.PI*2,a=Math.cos(t)*p,n=Math.sin(t)*p;0===e?H.moveTo(a,n):H.lineTo(a,n)}H.closePath();const b=new THREE.Path;b.absarc(0,0,w,0,2*Math.PI,!0),H.holes.push(b);const S={depth:v,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(H,S),i.translate(0,0,-v/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Sphere":const g=s;i=new THREE.SphereGeometry(g,32,16),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Square (Round)":const P=3,X=.8999999999999999,I=u,y=new THREE.Shape,f=P/2;y.moveTo(-f,-f),y.lineTo(f,-f),y.lineTo(f,f),y.lineTo(-f,f),y.closePath();const Y=new THREE.Path;Y.absarc(0,0,X,0,2*Math.PI,!0),y.holes.push(Y);const x={depth:I,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(y,x),i.translate(0,0,-I/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Square Pipe":const k=3,C=1.7999999999999998,Z=u,G=new THREE.Shape,q=k/2,z=C/2;G.moveTo(-q,-q),G.lineTo(q,-q),G.lineTo(q,q),G.lineTo(-q,q),G.closePath();const A=new THREE.Path;A.moveTo(-z,-z),A.lineTo(z,-z),A.lineTo(z,z),A.lineTo(-z,z),A.closePath(),G.holes.push(A);const B={depth:Z,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(G,B),i.translate(0,0,-Z/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Rectangle Pipe":const L=3.75,F=s,O=u,W=L-2*c,N=F-2*c,j=new THREE.Shape,J=L/2,V=F/2,K=W/2,Q=N/2;j.moveTo(-J,-V),j.lineTo(J,-V),j.lineTo(J,V),j.lineTo(-J,V),j.closePath();const U=new THREE.Path;U.moveTo(-K,-Q),U.lineTo(K,-Q),U.lineTo(K,Q),U.lineTo(-K,Q),U.closePath(),j.holes.push(U);const $={depth:O,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(j,$),i.translate(0,0,-O/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Triangle":const _=3,ee=_*(Math.sqrt(3)/2),te=u,ae=new THREE.Shape,ne=_/2;ae.moveTo(-ne,0),ae.lineTo(ne,0),ae.lineTo(0,ee),ae.closePath();const oe={depth:te,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(ae,oe),i.translate(0,0,-te/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Trapezoid":case"Trapezium":case"Trapezoid / Trapezium":const re=3.75,ie=s,se=s,ue=u,ce=new THREE.Shape,le=re/2,he=ie/2;ce.moveTo(-le,0),ce.lineTo(le,0),ce.lineTo(he,se),ce.lineTo(-he,se),ce.closePath();const Re={depth:ue,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(ce,Re),i.translate(0,0,-ue/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Oval":const Me=3.75,Ee=s,Te=u,de=new THREE.Shape,me=Me/3,De=Ee/2;de.ellipse(0,0,me,De,0,2*Math.PI,!1,0);const pe={depth:Te,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(de,pe),i.translate(0,0,-Te/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"CR Square":const we=3,ve=.30000000000000004,He=u,be=new THREE.Shape,Se=we/2,ge=ve;be.moveTo(-Se+ge,-Se),be.lineTo(Se-ge,-Se),be.quadraticCurveTo(Se,-Se,Se,-Se+ge),be.lineTo(Se,Se-ge),be.quadraticCurveTo(Se,Se,Se-ge,Se),be.lineTo(-Se+ge,Se),be.quadraticCurveTo(-Se,Se,-Se,Se-ge),be.lineTo(-Se,-Se+ge),be.quadraticCurveTo(-Se,-Se,-Se+ge,-Se);const Pe={depth:He,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(be,Pe),i.translate(0,0,-He/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"CR Rectangle":const Xe=3.75,Ie=s,ye=.30000000000000004,fe=u,Ye=new THREE.Shape,xe=Xe/2,ke=Ie/2,Ce=ye;Ye.moveTo(-xe+Ce,-ke),Ye.lineTo(xe-Ce,-ke),Ye.quadraticCurveTo(xe,-ke,xe,-ke+Ce),Ye.lineTo(xe,ke-Ce),Ye.quadraticCurveTo(xe,ke,xe-Ce,ke),Ye.lineTo(-xe+Ce,ke),Ye.quadraticCurveTo(-xe,ke,-xe,ke-Ce),Ye.lineTo(-xe,-ke+Ce),Ye.quadraticCurveTo(-xe,-ke,-xe+Ce,-ke);const Ze={depth:fe,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Ye,Ze),i.translate(0,0,-fe/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Angle":const Ge=3,qe=2.505,ze=c,Ae=.24899999999999997,Be=u,Le=new THREE.Shape;Le.moveTo(0,0),Le.lineTo(Ge,0),Le.lineTo(Ge,ze),Le.lineTo(Ae,ze),Le.lineTo(Ae,qe),Le.lineTo(0,qe),Le.lineTo(0,0);const Fe={depth:Be,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Le,Fe),i.translate(-Ge/2,-qe/2,-Be/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"Channel":const Oe=3,We=4.005,Ne=c,je=.24899999999999997,Je=u,Ve=new THREE.Shape;Ve.moveTo(0,0),Ve.lineTo(Oe,0),Ve.lineTo(Oe,Ne),Ve.lineTo(je,Ne),Ve.lineTo(je,We-Ne),Ve.lineTo(Oe,We-Ne),Ve.lineTo(Oe,We),Ve.lineTo(0,We),Ve.lineTo(0,0);const Ke={depth:Je,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(Ve,Ke),i.translate(-Oe/2,-We/2,-Je/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"T Bar":const Qe=3.495,Ue=3,$e=c,_e=.24899999999999997,et=u,tt=new THREE.Shape,at=(Qe-_e)/2;tt.moveTo(at,0),tt.lineTo(at+_e,0),tt.lineTo(at+_e,Ue-$e),tt.lineTo(Qe,Ue-$e),tt.lineTo(Qe,Ue),tt.lineTo(0,Ue),tt.lineTo(0,Ue-$e),tt.lineTo(at,Ue-$e),tt.lineTo(at,0);const nt={depth:et,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(tt,nt),i.translate(-Qe/2,-Ue/2,-et/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"I Beam":const ot=3,rt=4.005,it=c,st=.201,ut=u,ct=new THREE.Shape;ct.moveTo(0,0),ct.lineTo(ot,0),ct.lineTo(ot,it);const lt=(ot-st)/2;ct.lineTo(lt+st,it),ct.lineTo(lt+st,rt-it),ct.lineTo(ot,rt-it),ct.lineTo(ot,rt),ct.lineTo(0,rt),ct.lineTo(0,rt-it),ct.lineTo(lt,rt-it),ct.lineTo(lt,it),ct.lineTo(0,it),ct.lineTo(0,0);const ht={depth:ut,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(ct,ht),i.translate(-ot/2,-rt/2,-ut/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"C Shape":const Rt=3,Mt=1.995,Et=.201,Tt=.405,dt=u,mt=new THREE.Shape;mt.moveTo(0,0),mt.lineTo(Rt,0),mt.lineTo(Rt,Mt),mt.lineTo(Rt-Tt,Mt),mt.lineTo(Rt-Tt,Mt-Et),mt.lineTo(Rt-Et,Mt-Et),mt.lineTo(Rt-Et,Et),mt.lineTo(Et,Et),mt.lineTo(Et,Mt-Et),mt.lineTo(Tt,Mt-Et),mt.lineTo(Tt,Mt),mt.lineTo(0,Mt),mt.lineTo(0,0);const Dt={depth:dt,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(mt,Dt),i.translate(-Rt/2,-Mt/2,-dt/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;case"E Shape":const pt=3,wt=4.005,vt=c,Ht=.24899999999999997,bt=u,St=new THREE.Shape;St.moveTo(0,0),St.lineTo(pt,0),St.lineTo(pt,vt),St.lineTo(Ht,vt);const gt=(wt-vt)/2;St.lineTo(Ht,gt),St.lineTo(pt,gt),St.lineTo(pt,gt+vt),St.lineTo(Ht,gt+vt),St.lineTo(Ht,wt-vt),St.lineTo(pt,wt-vt),St.lineTo(pt,wt),St.lineTo(0,wt),St.lineTo(0,0);const Pt={depth:bt,bevelEnabled:!1,curveSegments:200};i=new THREE.ExtrudeGeometry(St,Pt),i.translate(-pt/2,-wt/2,-bt/2),i.rotateX(-Math.PI/2),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.needsInitialRotation=!0,currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0;break;default:i=new THREE.BoxGeometry(1,1,1),currentMesh=new THREE.Mesh(i,r),currentMesh.userData.initialXRotation=0,currentMesh.userData.initialYRotation=0,currentMesh.userData.initialZRotation=0}currentMesh&&(currentMesh.castShadow=!0,currentMesh.receiveShadow=!0,scene.add(currentMesh),camera.position.set(5,5,5),camera.lookAt(0,0,0))}function onWindowResize(){const e=document.querySelector(".shape-container");camera.aspect=e.clientWidth/e.clientHeight,camera.updateProjectionMatrix(),renderer.setSize(e.clientWidth,e.clientHeight)}function animate(){requestAnimationFrame(animate),renderer.render(scene,camera)}function clearThreeJSVisualization(){currentMesh&&scene&&(scene.remove(currentMesh),currentMesh.geometry.dispose(),currentMesh.material.dispose(),currentMesh=null),updateSceneBackground(null)}function toggleAutoRotation(){autoRotate=!autoRotate,manuallyDisabled=!autoRotate;const e=document.getElementById("autoRotateToggle");return e&&(e.textContent=autoRotate?"Auto Rotate: ON":"Auto Rotate: OFF"),autoRotate}function setAutoRotationSpeed(e){autoRotateSpeed=e}function enableAutoRotation(){autoRotate=!0,manuallyDisabled=!1;const e=document.getElementById("autoRotateToggle");e&&(e.textContent="Auto Rotate: ON")}function disableAutoRotation(){autoRotate=!1,manuallyDisabled=!0;const e=document.getElementById("autoRotateToggle");e&&(e.textContent="Auto Rotate: OFF")}function resetAutoRotation(){autoRotateX=0,autoRotateY=0,manuallyDisabled=!1;const e=document.getElementById("autoRotateToggle");e&&(e.textContent=autoRotate?"Auto Rotate: ON":"Auto Rotate: OFF")}